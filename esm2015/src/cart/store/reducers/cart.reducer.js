/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as fromAction from './../actions';
/** @type {?} */
export const initialState = {
    content: {},
    entries: {},
    refresh: false,
    cartMergeComplete: false
};
/**
 * @param {?=} state
 * @param {?=} action
 * @return {?}
 */
export function reducer(state = initialState, action) {
    switch (action.type) {
        case fromAction.MERGE_CART: {
            return Object.assign({}, state, { cartMergeComplete: false });
        }
        case fromAction.MERGE_CART_SUCCESS: {
            return Object.assign({}, state, { cartMergeComplete: true });
        }
        case fromAction.LOAD_CART_SUCCESS:
        case fromAction.CREATE_CART_SUCCESS: {
            /** @type {?} */
            const content = Object.assign({}, action.payload);
            /** @type {?} */
            let entries = {};
            if (content.entries) {
                entries = content.entries.reduce((entryMap, entry) => {
                    return Object.assign({}, entryMap, { [entry.product.code]: state.entries[entry.product.code]
                            ? Object.assign({}, state.entries[entry.product.code], entry) : entry });
                }, Object.assign({}, entries));
                delete content['entries'];
            }
            return Object.assign({}, state, { content,
                entries, refresh: false });
        }
        case fromAction.REMOVE_ENTRY_SUCCESS:
        case fromAction.UPDATE_ENTRY_SUCCESS:
        case fromAction.ADD_ENTRY_SUCCESS: {
            return Object.assign({}, state, { refresh: true });
        }
    }
    return state;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC5yZWR1Y2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNwYXJ0YWN1cy9jb3JlLyIsInNvdXJjZXMiOlsic3JjL2NhcnQvc3RvcmUvcmVkdWNlcnMvY2FydC5yZWR1Y2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEtBQUssVUFBVSxNQUFNLGNBQWMsQ0FBQzs7QUFJM0MsTUFBTSxPQUFPLFlBQVksR0FBYztJQUNyQyxPQUFPLEVBQUUsRUFBRTtJQUNYLE9BQU8sRUFBRSxFQUFFO0lBQ1gsT0FBTyxFQUFFLEtBQUs7SUFDZCxpQkFBaUIsRUFBRSxLQUFLO0NBQ3pCOzs7Ozs7QUFFRCxNQUFNLFVBQVUsT0FBTyxDQUNyQixLQUFLLEdBQUcsWUFBWSxFQUNwQixNQUEwRDtJQUUxRCxRQUFRLE1BQU0sQ0FBQyxJQUFJLEVBQUU7UUFDbkIsS0FBSyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDMUIseUJBQ0ssS0FBSyxJQUNSLGlCQUFpQixFQUFFLEtBQUssSUFDeEI7U0FDSDtRQUVELEtBQUssVUFBVSxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDbEMseUJBQ0ssS0FBSyxJQUNSLGlCQUFpQixFQUFFLElBQUksSUFDdkI7U0FDSDtRQUVELEtBQUssVUFBVSxDQUFDLGlCQUFpQixDQUFDO1FBQ2xDLEtBQUssVUFBVSxDQUFDLG1CQUFtQixDQUFDLENBQUM7O2tCQUM3QixPQUFPLHFCQUFRLE1BQU0sQ0FBQyxPQUFPLENBQUU7O2dCQUNqQyxPQUFPLEdBQUcsRUFBRTtZQUNoQixJQUFJLE9BQU8sQ0FBQyxPQUFPLEVBQUU7Z0JBQ25CLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FDOUIsQ0FBQyxRQUFpQyxFQUFFLEtBQWlCLEVBQUUsRUFBRTtvQkFDdkQseUJBQ0ssUUFBUSxJQU9YLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDOzRCQUNyRCxDQUFDLG1CQUNNLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFDakMsS0FBSyxFQUVaLENBQUMsQ0FBQyxLQUFLLElBQ1Q7Z0JBQ0osQ0FBQyxvQkFFSSxPQUFPLEVBRWIsQ0FBQztnQkFDRixPQUFPLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQzthQUMzQjtZQUNELHlCQUNLLEtBQUssSUFDUixPQUFPO2dCQUNQLE9BQU8sRUFDUCxPQUFPLEVBQUUsS0FBSyxJQUNkO1NBQ0g7UUFFRCxLQUFLLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQztRQUNyQyxLQUFLLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQztRQUNyQyxLQUFLLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1lBQ2pDLHlCQUNLLEtBQUssSUFDUixPQUFPLEVBQUUsSUFBSSxJQUNiO1NBQ0g7S0FDRjtJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGZyb21BY3Rpb24gZnJvbSAnLi8uLi9hY3Rpb25zJztcbmltcG9ydCB7IE9yZGVyRW50cnkgfSBmcm9tICcuLi8uLi8uLi9vY2Mvb2NjLW1vZGVscy9pbmRleCc7XG5pbXBvcnQgeyBDYXJ0U3RhdGUgfSBmcm9tICcuLi9jYXJ0LXN0YXRlJztcblxuZXhwb3J0IGNvbnN0IGluaXRpYWxTdGF0ZTogQ2FydFN0YXRlID0ge1xuICBjb250ZW50OiB7fSxcbiAgZW50cmllczoge30sXG4gIHJlZnJlc2g6IGZhbHNlLFxuICBjYXJ0TWVyZ2VDb21wbGV0ZTogZmFsc2Vcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiByZWR1Y2VyKFxuICBzdGF0ZSA9IGluaXRpYWxTdGF0ZSxcbiAgYWN0aW9uOiBmcm9tQWN0aW9uLkNhcnRBY3Rpb24gfCBmcm9tQWN0aW9uLkNhcnRFbnRyeUFjdGlvblxuKTogQ2FydFN0YXRlIHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgZnJvbUFjdGlvbi5NRVJHRV9DQVJUOiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgY2FydE1lcmdlQ29tcGxldGU6IGZhbHNlXG4gICAgICB9O1xuICAgIH1cblxuICAgIGNhc2UgZnJvbUFjdGlvbi5NRVJHRV9DQVJUX1NVQ0NFU1M6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBjYXJ0TWVyZ2VDb21wbGV0ZTogdHJ1ZVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBjYXNlIGZyb21BY3Rpb24uTE9BRF9DQVJUX1NVQ0NFU1M6XG4gICAgY2FzZSBmcm9tQWN0aW9uLkNSRUFURV9DQVJUX1NVQ0NFU1M6IHtcbiAgICAgIGNvbnN0IGNvbnRlbnQgPSB7IC4uLmFjdGlvbi5wYXlsb2FkIH07XG4gICAgICBsZXQgZW50cmllcyA9IHt9O1xuICAgICAgaWYgKGNvbnRlbnQuZW50cmllcykge1xuICAgICAgICBlbnRyaWVzID0gY29udGVudC5lbnRyaWVzLnJlZHVjZShcbiAgICAgICAgICAoZW50cnlNYXA6IHsgW2NvZGU6IHN0cmluZ106IGFueSB9LCBlbnRyeTogT3JkZXJFbnRyeSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgLi4uZW50cnlNYXAsXG4gICAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgIElmIHdlIHJlZnJlc2ggdGhlIHBhZ2UgZnJvbSBjYXJ0IGRldGFpbHMgcGFnZSwgMiBsb2FkIGNhcnRcbiAgICAgICAgICAgICAgQWN0aW9ucyBnZXRzIGRpc3BhdGNoZWQuIE9uZSBpcyBub24tZGV0YWlsLCBhbmQgdGhlIHNlY29uZCBpcyBkZXRhaWxlZC5cbiAgICAgICAgICAgICAgSW4gdGhlIGNhc2Ugd2hlcmUgdGhlIGRldGFpbGVkIG9uY2UgZ2V0IHJlc29sdmVkIGZpcnN0LCB3ZSBtZXJnZSB0aGUgZXhpc3RpbmdcbiAgICAgICAgICAgICAgZGF0YSB3aXRoIHRoZSBuZXcgZGF0YSBmcm9tIHRoZSByZXNwb25zZSAodG8gbm90IGRlbGV0ZSBleGlzdGluZyBkZXRhaWxlZCBkYXRhKS5cbiAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgW2VudHJ5LnByb2R1Y3QuY29kZV06IHN0YXRlLmVudHJpZXNbZW50cnkucHJvZHVjdC5jb2RlXVxuICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAuLi5zdGF0ZS5lbnRyaWVzW2VudHJ5LnByb2R1Y3QuY29kZV0sXG4gICAgICAgICAgICAgICAgICAgIC4uLmVudHJ5XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgOiBlbnRyeVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIC4uLmVudHJpZXNcbiAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIGRlbGV0ZSBjb250ZW50WydlbnRyaWVzJ107XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgY29udGVudCxcbiAgICAgICAgZW50cmllcyxcbiAgICAgICAgcmVmcmVzaDogZmFsc2VcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY2FzZSBmcm9tQWN0aW9uLlJFTU9WRV9FTlRSWV9TVUNDRVNTOlxuICAgIGNhc2UgZnJvbUFjdGlvbi5VUERBVEVfRU5UUllfU1VDQ0VTUzpcbiAgICBjYXNlIGZyb21BY3Rpb24uQUREX0VOVFJZX1NVQ0NFU1M6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICByZWZyZXNoOiB0cnVlXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdGF0ZTtcbn1cbiJdfQ==